{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/app/components/ServicesSection.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { TServiceData } from \"@/types\"\r\nimport { Chip } from \"@nextui-org/chip\";\r\nimport { Listbox, ListboxItem } from \"@nextui-org/listbox\";\r\nimport clsx from \"clsx\"\r\nimport { useAnimation } from \"framer-motion\"\r\nimport { useEffect, useRef, useState } from \"react\"\r\n\r\n\r\nfunction ServiceCard({ service, index, onInView }: { service: TServiceData, index: number, onInView: (inView: boolean) => void }) {\r\n    const controls = useAnimation()\r\n    const ref = useRef<HTMLDivElement>(null)\r\n\r\n    useEffect(() => {\r\n        const observer = new IntersectionObserver(\r\n            ([entry]) => {\r\n                onInView(entry.isIntersecting)\r\n                controls.start({\r\n                    opacity: entry.isIntersecting ? 1 : 0.25,\r\n                    y: entry.isIntersecting ? 0 : 50,\r\n                    transition: { duration: 0.5, delay: index * 0.2 }\r\n                })\r\n            },\r\n            { threshold: 0.5 }\r\n        )\r\n\r\n        if (ref.current) {\r\n            observer.observe(ref.current)\r\n        }\r\n\r\n        return () => {\r\n            if (ref.current) {\r\n                observer.unobserve(ref.current)\r\n            }\r\n        }\r\n    }, [controls, index, onInView])\r\n\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            className={clsx(\r\n                \"flex flex-col items-start gap-4 w-full p-4 rounded-2xl cursor-pointer\",\r\n                \"hover:-translate-y-8 hover:shadow-lg hover:bg-primary-400 text-default-foreground hover:text-secondary-foreground\",\r\n                \"transition-all transform duration-500 ease-in-out my-8\",\r\n            )}\r\n        >\r\n            <div className=\"flex flex-row gap-2 flex-wrap\">\r\n                {service.tags && service.tags.map((tag, tagIndex) => (\r\n                    <Chip key={tagIndex} variant=\"bordered\" size=\"sm\" color=\"primary\">\r\n                        {tag}\r\n                    </Chip>\r\n                ))}\r\n            </div>\r\n            <h2 className={clsx(\r\n                \"bg-clip-text inline-block\",\r\n                \"text-3xl font-bold\",\r\n            )}>\r\n                {service.name}\r\n            </h2>\r\n\r\n            <Listbox\r\n                items={service.features?.map((feature, featureIndex) => ({ value: feature, label: feature }))}\r\n            >\r\n                {\r\n                    (items) => (\r\n                        <ListboxItem\r\n                            variant=\"light\"\r\n                            color=\"primary\"\r\n                            key={items.value}\r\n                        >\r\n                            {items.label}\r\n                        </ListboxItem>\r\n                    )\r\n                }\r\n            </Listbox>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default function ServicesSection({ data }: { data: TServiceData[] }) {\r\n    const [activeIndex, setActiveIndex] = useState(0)\r\n\r\n    const handleInView = (index: number, inView: boolean) => {\r\n        if (inView) {\r\n            setActiveIndex(index)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section\r\n            aria-label=\"Hero Service section\"\r\n            className=\"relative grid grid-cols-1 md:grid-cols-4 gap-8 md:gap-16 py-8 md:py-10 justify-items-center\"\r\n            id=\"chung-toi-cung-cap-dich-vu-gi\"\r\n        >\r\n            {data && data.map((service, index) => (\r\n                <ServiceCard key={index} service={service} index={index} onInView={(inView) => handleInView(index, inView)} />\r\n            ))}\r\n        </section>\r\n    )\r\n}"],"names":[],"mappings":";;;;;;;;;;;;;AAAA;;;;;;AAUA,SAAS,YAAY,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAiF;;IAC5H,MAAM,WAAW,CAAA,GAAA,4LAAA,CAAA,eAAY,AAAD;IAC5B,MAAM,MAAM,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAkB;IAEnC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,WAAW,IAAI,qBACjB,CAAC,CAAC,MAAM;YACJ,SAAS,MAAM,cAAc;YAC7B,SAAS,KAAK,CAAC;gBACX,SAAS,MAAM,cAAc,GAAG,IAAI;gBACpC,GAAG,MAAM,cAAc,GAAG,IAAI;gBAC9B,YAAY;oBAAE,UAAU;oBAAK,OAAO,QAAQ;gBAAI;YACpD;QACJ,GACA;YAAE,WAAW;QAAI;QAGrB,IAAI,IAAI,OAAO,EAAE;YACb,SAAS,OAAO,CAAC,IAAI,OAAO;QAChC;QAEA,OAAO;YACH,IAAI,IAAI,OAAO,EAAE;gBACb,SAAS,SAAS,CAAC,IAAI,OAAO;YAClC;QACJ;IACJ,GAAG;QAAC;QAAU;QAAO;KAAS;IAE9B,qBACI,6LAAC;QACG,KAAK;QACL,WAAW,CAAA,GAAA,wIAAA,CAAA,UAAI,AAAD,EACV,yEACA,qHACA;;0BAGJ,6LAAC;gBAAI,WAAU;0BACV,QAAQ,IAAI,IAAI,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,yBACpC,6LAAC,gNAAA,CAAA,OAAI;wBAAgB,SAAQ;wBAAW,MAAK;wBAAK,OAAM;kCACnD;uBADM;;;;;;;;;;0BAKnB,6LAAC;gBAAG,WAAW,CAAA,GAAA,wIAAA,CAAA,UAAI,AAAD,EACd,6BACA;0BAEC,QAAQ,IAAI;;;;;;0BAGjB,6LAAC,yNAAA,CAAA,UAAO;gBACJ,OAAO,QAAQ,QAAQ,EAAE,IAAI,CAAC,SAAS,eAAiB,CAAC;wBAAE,OAAO;wBAAS,OAAO;oBAAQ,CAAC;0BAGvF,CAAC,sBACG,6LAAC,uOAAA,CAAA,cAAW;wBACR,SAAQ;wBACR,OAAM;kCAGL,MAAM,KAAK;uBAFP,MAAM,KAAK;;;;;;;;;;;;;;;;AAS5C;GApES;;QACY,4LAAA,CAAA,eAAY;;;KADxB;AAsEM,SAAS,gBAAgB,EAAE,IAAI,EAA4B;;IACtE,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,MAAM,eAAe,CAAC,OAAe;QACjC,IAAI,QAAQ;YACR,eAAe;QACnB;IACJ;IAEA,qBACI,6LAAC;QACG,cAAW;QACX,WAAU;QACV,IAAG;kBAEF,QAAQ,KAAK,GAAG,CAAC,CAAC,SAAS,sBACxB,6LAAC;gBAAwB,SAAS;gBAAS,OAAO;gBAAO,UAAU,CAAC,SAAW,aAAa,OAAO;eAAjF;;;;;;;;;;AAIlC;IApBwB;MAAA"}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}